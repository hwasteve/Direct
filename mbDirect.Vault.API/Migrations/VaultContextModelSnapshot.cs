// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using mbDirect.Vault.Repo;

namespace mbDirect.Vault.API.Migrations
{
    [DbContext(typeof(VaultContext))]
    partial class VaultContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("mbDirect.Vault.Models.Data.Account", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountStatusCode")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("AddDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("BillingZipCode")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Expiration")
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)");

                    b.Property<string>("InstrumentTypeCode")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("OwnerName")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("RoutingNumber")
                        .HasMaxLength(9)
                        .HasColumnType("varchar(9)");

                    b.Property<DateTime>("StatusDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("Id");

                    b.HasIndex("AccountStatusCode");

                    b.HasIndex("InstrumentTypeCode");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("mbDirect.Vault.Models.Data.AccountStatus", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("LastMaintDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Code");

                    b.ToTable("AccountStatuses");
                });

            modelBuilder.Entity("mbDirect.Vault.Models.Data.Gateway", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EndPoint")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("LastMaintDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.HasKey("Id");

                    b.ToTable("Gateways");
                });

            modelBuilder.Entity("mbDirect.Vault.Models.Data.InstrumentType", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("LastMaintDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.HasKey("Code");

                    b.ToTable("InstrumentTypes");

                    b.HasData(
                        new
                        {
                            Code = "credit",
                            LastMaintDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Credit Card"
                        },
                        new
                        {
                            Code = "debit",
                            LastMaintDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Debit Card"
                        });
                });

            modelBuilder.Entity("mbDirect.Vault.Models.Data.Key", b =>
                {
                    b.Property<int>("KeyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KeyValue")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("LastMaintDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Vector")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("KeyId");

                    b.ToTable("Keys");
                });

            modelBuilder.Entity("mbDirect.Vault.Models.Data.Merchant", b =>
                {
                    b.Property<string>("MerchantId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeviceId")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("LastMaintDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<int?>("TransitCredentialNumber")
                        .HasColumnType("int");

                    b.Property<string>("TransitTransactionKey")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int?>("TransitUserNumber")
                        .HasColumnType("int");

                    b.HasKey("MerchantId");

                    b.HasIndex("TransitCredentialNumber");

                    b.HasIndex("TransitUserNumber");

                    b.ToTable("Merchants");
                });

            modelBuilder.Entity("mbDirect.Vault.Models.Data.TransitCredential", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DeveloperId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastMaintDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("PasswordEncrypted")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("PasswordKeyId")
                        .HasColumnType("int");

                    b.Property<int?>("TransitGatewayId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.HasKey("Number");

                    b.HasIndex("PasswordKeyId");

                    b.HasIndex("TransitGatewayId");

                    b.ToTable("TransitCredentials");
                });

            modelBuilder.Entity("mbDirect.Vault.Models.Data.Account", b =>
                {
                    b.HasOne("mbDirect.Vault.Models.Data.AccountStatus", null)
                        .WithMany()
                        .HasForeignKey("AccountStatusCode")
                        .HasConstraintName("FK_Account_Status");

                    b.HasOne("mbDirect.Vault.Models.Data.InstrumentType", null)
                        .WithMany()
                        .HasForeignKey("InstrumentTypeCode")
                        .HasConstraintName("FK_Account_InstrumentType");
                });

            modelBuilder.Entity("mbDirect.Vault.Models.Data.Merchant", b =>
                {
                    b.HasOne("mbDirect.Vault.Models.Data.TransitCredential", null)
                        .WithMany()
                        .HasForeignKey("TransitCredentialNumber");

                    b.HasOne("mbDirect.Vault.Models.Data.TransitCredential", "TransitUser")
                        .WithMany()
                        .HasForeignKey("TransitUserNumber");

                    b.Navigation("TransitUser");
                });

            modelBuilder.Entity("mbDirect.Vault.Models.Data.TransitCredential", b =>
                {
                    b.HasOne("mbDirect.Vault.Models.Data.Key", null)
                        .WithMany()
                        .HasForeignKey("PasswordKeyId")
                        .HasConstraintName("FK_TransitCredential_PasswordKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("mbDirect.Vault.Models.Data.Gateway", "TransitGateway")
                        .WithMany()
                        .HasForeignKey("TransitGatewayId");

                    b.Navigation("TransitGateway");
                });
#pragma warning restore 612, 618
        }
    }
}
